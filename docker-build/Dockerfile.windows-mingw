FROM ubuntu:22.04

# Set noninteractive installation
ENV DEBIAN_FRONTEND=noninteractive

# Install a full MinGW environment from the MXE project which provides better Windows support
RUN apt-get update && apt-get install -y \
    git \
    cmake \
    build-essential \
    g++ \
    autoconf \
    automake \
    autopoint \
    bash \
    bison \
    bzip2 \
    flex \
    g++ \
    g++-multilib \
    gettext \
    git \
    gperf \
    intltool \
    libc6-dev-i386 \
    libgdk-pixbuf2.0-dev \
    libltdl-dev \
    libssl-dev \
    libtool-bin \
    libxml-parser-perl \
    lzip \
    make \
    openssl \
    p7zip-full \
    patch \
    perl \
    python3 \
    python3-dev \
    python3-pip \
    ruby \
    sed \
    unzip \
    wget \
    xz-utils \
    && rm -rf /var/lib/apt/lists/*

# Download and build MXE (MinGW cross environment)
WORKDIR /opt
RUN git clone https://github.com/mxe/mxe.git && \
    cd mxe && \
    make -j$(nproc) MXE_TARGETS="x86_64-w64-mingw32.static" gcc && \
    echo 'export PATH="/opt/mxe/usr/bin:$PATH"' >> /etc/profile.d/mxe.sh && \
    . /etc/profile.d/mxe.sh

# Set up environment variables for MXE
ENV PATH="/opt/mxe/usr/bin:${PATH}"

# Create a working directory
WORKDIR /build

# Clone the umdoc repository
RUN git clone https://github.com/craflin/umdoc.git && \
    cd umdoc && \
    git submodule update --init

# Build for Windows using MXE's MinGW toolchain
RUN mkdir -p /build/umdoc/build-windows && \
    cd /build/umdoc/build-windows && \
    /opt/mxe/usr/bin/x86_64-w64-mingw32.static-cmake .. && \
    make -j$(nproc)

# Create output directory
RUN mkdir -p /output/windows

# Copy the Windows executable
RUN if [ -f /build/umdoc/build-windows/umdoc.exe ]; then \
      cp /build/umdoc/build-windows/umdoc.exe /output/windows/; \
    fi

# Set volume for getting binaries out
VOLUME /output
